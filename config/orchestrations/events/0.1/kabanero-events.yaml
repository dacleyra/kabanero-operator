apiVersion: v1
kind: Service
metadata:
  name: kabanero-events
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: kabanero-events-serving-cert
spec:
  selector:
    name: kabanero-events
  ports:
  - protocol: TCP
    port: 443
    targetPort: 9443
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: kabanero-events
spec:
  to:
    kind: Service
    name: kabanero-events
  tls:
    termination: reencrypt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: kabanero-events
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - get
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - kabanero-events
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - kabanero.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kabanero-events
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kabanero-events
subjects:
- kind: ServiceAccount
  name: kabanero-events
roleRef:
  kind: Role
  name: kabanero-events
  apiGroup: rbac.authorization.k8s.io
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kabanero-events
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kabanero-events
  template:
    metadata:
      labels:
        name: kabanero-events
        app.kubernetes.io/name: kabanero-events
        app.kubernetes.io/instance: {{ .instance }}
        app.kubernetes.io/version: '0.1'
        app.kubernetes.io/component: kabanero-events
        app.kubernetes.io/part-of: kabanero
        app.kubernetes.io/managed-by: kabanero-operator
    spec:
      serviceAccountName: kabanero-events
      containers:
        - name: kabanero-events
          image: {{ .image }}
          imagePullPolicy: Always
          env:
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
          - mountPath: /etc/tls
            name: kabanero-events-serving-cert
            readOnly: true
      volumes:
      - name: kabanero-events-serving-cert
        secret:
          secretName: kabanero-events-serving-cert

